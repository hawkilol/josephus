# -*- coding: utf-8 -*-
"""josephus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JzQxDYOHQWG3jUAnavDEH0g77eZl7Bug
"""

import time
import matplotlib.pyplot as plt
import numpy as np

def josephus(n, k):
 
    if (n <= 1):
        return 1
    else:
 
        return (josephus(n - 1, k) + k-1) % n + 1

print(josephus(0,2))

timesInte = []
timesRecur = []

#arr = np.random.randint(999, size=100)
#arr = np.sort(arr)
arr = []
max_n = 500

##busca_binaria(arr, x, 0, last)
k = 2
for n in range(max_n):
  
  #arr1 = arr[:j]
  

  start_time = time.time()
  josephus(n,k)
  tInte = (time.time() - start_time)
  timesInte.append(tInte)

y1 = timesInte

#print(y2)

x = np.arange(len(y1))  # the label locations

# # #print(power_smooth)
# plt.show()
# %matplotlib inline
# plt.xlabel("No. of elements")
# plt.ylabel("Time required")
# plt.plot(x, y1)
# plt.show()

y1 = timesInte

x = np.arange(len(y1))  # the label locations

width = 0.5  # the width of the bars

fig, ax = plt.subplots()
rects1 = ax.bar(x + width, y1, width, label='JOSEPHU')

ax.set_ylabel('Times')
ax.set_xlabel('N individuos(x)')

ax.legend()

#plt.style.use('black')

#fig.tight_layout()

plt.show()

# Commented out IPython magic to ensure Python compatibility.
# #print(power_smooth)
plt.show()
# %matplotlib inline
plt.xlabel("No. of elements")
plt.ylabel("Time required")
plt.plot(x, y1)
plt.show()